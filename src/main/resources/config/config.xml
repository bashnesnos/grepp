<?xml version="1.0" encoding="UTF-8"?>
<root xmlns="http://www.smltools.org/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.smltools.org/config config.xsd">
	<defaults>
		<spoolFileExtension>.log</spoolFileExtension>
		<resultsDir>results</resultsDir>
		<postProcessSeparator>csv</postProcessSeparator>
	</defaults>
	<postProcessSeparators>
		<separator id="csv">
			<spoolFileExtension>.csv</spoolFileExtension>
			<value>,</value>
		</separator>
		<separator id="piped">
			<spoolFileExtension>.txt</spoolFileExtension>
			<value>|</value>
		</separator>
	</postProcessSeparators>
	<logDateFormats>
		<dateFormat id="iso">
			<value>yyyy-MM-dd HH:mm:ss</value>
			<regex>(\d{4}-\d{1,2}-\d{1,2} \d{2}:\d{2}:\d{2})</regex>
		</dateFormat>
	</logDateFormats>
    <config id="properties">
		<starter>log4j.logger</starter>
		<pattern>.*\.properties</pattern>
	</config>
	<config id="to_test">
		<logDateFormat>iso</logDateFormat>
		<starter>####\[\D{1,}\].*</starter>
		<logThreshold>4</logThreshold>
		<pattern>fpTest_</pattern>
	</config>
    <config id="pr_test">
		<logDateFormat>iso</logDateFormat>
		<logThreshold>24</logThreshold>
		<pattern>processing_</pattern>
	</config>
    <processThreads>
			<extractors>
				<pattern tags="to_test,pr_test">ThreadStart: '\d{1,}'</pattern>	
			</extractors>
			<skipends>
				<pattern tags="to_test,pr_test">SkipPattern</pattern>
			</skipends>
			<ends>
				<pattern tags="to_test,pr_test">ThreadEnd1</pattern>
				<pattern tags="to_test,pr_test">ThreadEnd2</pattern>
			</ends>
		</processThreads>
    <postProcessColumns>
		<splitter col_name="some_cmd" tags="count_ops" type="filter">Command name="?(.*?)"</splitter>
		<splitter col_name="count_of_operands" tags="count_ops" type="counter">(operand)</splitter>
		<splitter col_name="some_cmd" tags="group_ops" type="group">Command name="?(.*?)"</splitter>
		<splitter col_name="count_of_operands" tags="group_ops" type="counter">(operand)</splitter>
		<splitter col_name="some_cmd" tags="group_op_values" type="group">Command name="?(.*?)"</splitter>
		<splitter col_name="operands" tags="group_op_values" type="rfilter">operand='(.*?)'</splitter>
		<splitter col_name="some_cmd" tags="avg_timings" type="group">Command name="?(.*?)"</splitter>
		<splitter col_name="avg_processing" tags="avg_timings" type="avg">time="?(\d*)"</splitter>
		<splitter col_name="some_cmd" tags="avg_operands" type="group">Command name="?(.*?)"</splitter>
		<splitter col_name="avg_operands" tags="avg_operands" type="avg">(operand)</splitter>
	</postProcessColumns>
    <filterAliases>
			<filter tags="predef">Something::</filter>
			<filter tags="foo">Foo</filter>
			<filter tags="group_op_values,group_ops,count_ops,avg_timings">oo</filter>
	</filterAliases>
</root>
